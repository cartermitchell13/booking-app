# Caddy configuration for Multi-Tenant SaaS with On-Demand TLS
# This enables automatic SSL certificates for any custom domain pointed to your server

{
    # Global options
    email your-email@yourdomain.com  # Replace with your email for Let's Encrypt
    
    # On-demand TLS configuration
    on_demand_tls {
        # Security endpoint to verify domain ownership before issuing certificates
        ask http://localhost:3000/api/domains/verify-ssl
        interval 2m
        burst 5
    }
    
    # Automatic HTTPS redirect
    auto_https on
}

# Main platform domain (your Next.js app)
https://yourplatform.com {
    # Enable on-demand TLS for custom domains
    tls {
        on_demand
    }
    
    # Reverse proxy to your Next.js application
    reverse_proxy localhost:3000 {
        # Health check
        health_uri /api/health
        health_interval 30s
        
        # Headers for proper forwarding
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Host {host}
    }
    
    # Security headers
    header {
        # HSTS (HTTP Strict Transport Security)
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        
        # Prevent clickjacking
        X-Frame-Options "SAMEORIGIN"
        
        # XSS protection
        X-Content-Type-Options "nosniff"
        X-XSS-Protection "1; mode=block"
        
        # Remove server information
        -Server
    }
    
    # Enable compression
    encode gzip
    
    # Logging
    log {
        output file /var/log/caddy/access.log
        format json
    }
}

# Wildcard domain for custom domains (like booking.parkbus.com)
https:// {
    # Enable on-demand TLS - this is the magic that makes custom domains work
    tls {
        on_demand
    }
    
    # Reverse proxy to your Next.js application
    reverse_proxy localhost:3000 {
        # Health check
        health_uri /api/health
        health_interval 30s
        
        # Headers for proper forwarding
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Host {host}
        
        # Custom header to identify this as a custom domain request
        header_up X-Custom-Domain {host}
    }
    
    # Security headers (same as above)
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Frame-Options "SAMEORIGIN"
        X-Content-Type-Options "nosniff"
        X-XSS-Protection "1; mode=block"
        -Server
    }
    
    # Enable compression
    encode gzip
    
    # Logging for custom domains
    log {
        output file /var/log/caddy/custom-domains.log
        format json
    }
}

# Admin subdomain (optional - for super admin access)
https://admin.yourplatform.com {
    reverse_proxy localhost:3000 {
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Host {host}
        header_up X-Admin-Domain "true"
    }
    
    # Enhanced security for admin
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Frame-Options "DENY"
        X-Content-Type-Options "nosniff"
        X-XSS-Protection "1; mode=block"
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
        -Server
    }
    
    encode gzip
    
    log {
        output file /var/log/caddy/admin.log
        format json
    }
} 